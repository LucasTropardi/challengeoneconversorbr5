/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.conversor.view;

import java.text.DecimalFormat;

/**
 *
 * @author lucas
 */
public class TelaConversor extends javax.swing.JFrame {

    /**
     * Creates new form TelaConversor
     */
    public TelaConversor() {
        initComponents();
        jDesktopPane1.setVisible(false);
        jnConversorMoeda.setVisible(false);
        jnConversorTemp.setVisible(false);
        jnInfo.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jnConversorMoeda = new javax.swing.JInternalFrame();
        jPanel1 = new javax.swing.JPanel();
        lbMoeda1 = new javax.swing.JLabel();
        lbMoeda2 = new javax.swing.JLabel();
        btnConverter = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();
        txtMoeda2 = new javax.swing.JTextField();
        txtMoeda1 = new javax.swing.JTextField();
        cbMoeda1 = new javax.swing.JComboBox<>();
        cbMoeda2 = new javax.swing.JComboBox<>();
        jnConversorTemp = new javax.swing.JInternalFrame();
        jPanel2 = new javax.swing.JPanel();
        lbTemp1 = new javax.swing.JLabel();
        lbTemp2 = new javax.swing.JLabel();
        btnConverterTemp = new javax.swing.JButton();
        btnLimparTemp = new javax.swing.JButton();
        btnVoltarTemp = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        txtTemp1 = new javax.swing.JTextField();
        cbTemp1 = new javax.swing.JComboBox<>();
        cbTemp2 = new javax.swing.JComboBox<>();
        txtTemp2 = new javax.swing.JTextField();
        jnInfo = new javax.swing.JInternalFrame();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnVoltarInfo = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        menuPrincipal = new javax.swing.JMenuBar();
        mniMoedas = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        mniTemperaturas = new javax.swing.JMenuItem();
        mnSobre = new javax.swing.JMenu();
        mniInfo = new javax.swing.JMenuItem();
        mnSair = new javax.swing.JMenu();
        mniFechar = new javax.swing.JMenuItem();

        jMenuItem2.setText("jMenuItem2");

        jMenuItem3.setText("jMenuItem3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Multi-Conversor");
        setMaximumSize(new java.awt.Dimension(600, 400));
        setMinimumSize(new java.awt.Dimension(600, 400));
        setSize(new java.awt.Dimension(600, 400));
        getContentPane().setLayout(null);

        jnConversorMoeda.setTitle("Conversor de moedas");
        jnConversorMoeda.setVisible(true);
        jnConversorMoeda.getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        lbMoeda1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbMoeda1.setText("Moeda a converter");
        lbMoeda1.setToolTipText("");

        lbMoeda2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbMoeda2.setText("Moeda convertida");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(lbMoeda1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbMoeda2)
                .addContainerGap(50, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbMoeda1)
                    .addComponent(lbMoeda2))
                .addGap(194, 194, 194))
        );

        jnConversorMoeda.getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 426, 55);

        btnConverter.setText("Converter");
        btnConverter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConverterActionPerformed(evt);
            }
        });
        jnConversorMoeda.getContentPane().add(btnConverter);
        btnConverter.setBounds(120, 150, 85, 25);

        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });
        jnConversorMoeda.getContentPane().add(btnLimpar);
        btnLimpar.setBounds(220, 150, 75, 25);

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });
        jnConversorMoeda.getContentPane().add(btnVoltar);
        btnVoltar.setBounds(300, 150, 80, 25);

        txtMoeda2.setText("0.00");
        txtMoeda2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMoeda2ActionPerformed(evt);
            }
        });
        jnConversorMoeda.getContentPane().add(txtMoeda2);
        txtMoeda2.setBounds(220, 110, 163, 22);

        txtMoeda1.setText("0.00");
        jnConversorMoeda.getContentPane().add(txtMoeda1);
        txtMoeda1.setBounds(40, 110, 169, 22);

        cbMoeda1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Real", "Dolar", "Euro", "Libra Esterlina", "Peso Argentino", "Peso Chileno" }));
        jnConversorMoeda.getContentPane().add(cbMoeda1);
        cbMoeda1.setBounds(40, 70, 169, 22);

        cbMoeda2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Real", "Dolar", "Euro", "Libra Esterlina", "Peso Argentino", "Peso Chileno" }));
        jnConversorMoeda.getContentPane().add(cbMoeda2);
        cbMoeda2.setBounds(220, 70, 163, 22);

        jDesktopPane1.add(jnConversorMoeda);
        jnConversorMoeda.setBounds(90, 40, 442, 220);

        jnConversorTemp.setTitle("Conversor de temperaturas");
        jnConversorTemp.setVisible(true);
        jnConversorTemp.getContentPane().setLayout(null);

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        lbTemp1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbTemp1.setText("Temperatura a se converter");

        lbTemp2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbTemp2.setText("Temperatura convertida");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbTemp1)
                .addGap(289, 289, 289)
                .addComponent(lbTemp2)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTemp1)
                    .addComponent(lbTemp2))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jnConversorTemp.getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 0, 450, 67);

        btnConverterTemp.setText("Converter");
        btnConverterTemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConverterTempActionPerformed(evt);
            }
        });
        jnConversorTemp.getContentPane().add(btnConverterTemp);
        btnConverterTemp.setBounds(10, 80, 90, 25);

        btnLimparTemp.setText("Limpar");
        btnLimparTemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparTempActionPerformed(evt);
            }
        });
        jnConversorTemp.getContentPane().add(btnLimparTemp);
        btnLimparTemp.setBounds(10, 110, 90, 25);

        btnVoltarTemp.setText("Voltar");
        btnVoltarTemp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarTempActionPerformed(evt);
            }
        });
        jnConversorTemp.getContentPane().add(btnVoltarTemp);
        btnVoltarTemp.setBounds(10, 140, 90, 25);

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        cbTemp1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Celsius", "Fahrenheit", "Kelvin" }));

        cbTemp2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Celsius", "Fahrenheit", "Kelvin" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(cbTemp1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(cbTemp2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtTemp1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(txtTemp2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbTemp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbTemp2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTemp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTemp2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jnConversorTemp.getContentPane().add(jPanel3);
        jPanel3.setBounds(110, 80, 330, 80);

        jDesktopPane1.add(jnConversorTemp);
        jnConversorTemp.setBounds(40, 40, 466, 206);

        jnInfo.setTitle("Informações");
        jnInfo.setVisible(true);
        jnInfo.getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("JetBrains Mono Medium", 1, 16)); // NOI18N
        jLabel1.setText("Multi-Conversor");

        jLabel2.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        jLabel2.setText("Copyright protected ₢");

        jLabel3.setFont(new java.awt.Font("JetBrains Mono Medium", 0, 14)); // NOI18N
        jLabel3.setText("Taxas de cambio obtidas em 05/08/2023");

        jLabel4.setFont(new java.awt.Font("JetBrains Mono Medium", 0, 10)); // NOI18N
        jLabel4.setText("Atendendo ao segundo Challenge Alura do programa ONE");

        jLabel5.setFont(new java.awt.Font("Lucida Handwriting", 1, 14)); // NOI18N
        jLabel5.setText("Lucas Tropardi");

        jLabel6.setFont(new java.awt.Font("JetBrains Mono Medium", 0, 12)); // NOI18N
        jLabel6.setText("Conversor de Moedas");

        jLabel7.setFont(new java.awt.Font("JetBrains Mono Medium", 0, 12)); // NOI18N
        jLabel7.setText("Conversor de Temperaturas");

        btnVoltarInfo.setText("Voltar");
        btnVoltarInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarInfoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnVoltarInfo))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addGap(92, 92, 92)
                                    .addComponent(jLabel1))
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jLabel4))
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addGap(108, 108, 108)
                                    .addComponent(jLabel6))
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addGap(88, 88, 88)
                                    .addComponent(jLabel7))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(485, 485, 485))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addGap(30, 30, 30)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5))
                    .addComponent(btnVoltarInfo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jnInfo.getContentPane().add(jPanel4);
        jPanel4.setBounds(10, 10, 350, 210);

        jDesktopPane1.add(jnInfo);
        jnInfo.setBounds(70, 10, 385, 261);

        getContentPane().add(jDesktopPane1);
        jDesktopPane1.setBounds(-20, 0, 620, 370);

        jLabel8.setFont(new java.awt.Font("JetBrains Mono Medium", 1, 48)); // NOI18N
        jLabel8.setText("O.N.E.");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(180, 30, 220, 100);

        jLabel9.setFont(new java.awt.Font("JetBrains Mono Medium", 1, 36)); // NOI18N
        jLabel9.setText("Oracle Next Education");
        getContentPane().add(jLabel9);
        jLabel9.setBounds(40, 130, 520, 50);

        jLabel10.setFont(new java.awt.Font("Lucida Bright", 1, 52)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 255));
        jLabel10.setText("alura");
        getContentPane().add(jLabel10);
        jLabel10.setBounds(200, 200, 150, 70);

        mniMoedas.setText("Converter");

        jMenuItem1.setText("Moedas");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        mniMoedas.add(jMenuItem1);

        mniTemperaturas.setText("Temperaturas");
        mniTemperaturas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniTemperaturasActionPerformed(evt);
            }
        });
        mniMoedas.add(mniTemperaturas);

        menuPrincipal.add(mniMoedas);

        mnSobre.setText("Sobre");

        mniInfo.setText("info");
        mniInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniInfoActionPerformed(evt);
            }
        });
        mnSobre.add(mniInfo);

        menuPrincipal.add(mnSobre);

        mnSair.setText("Sair");

        mniFechar.setText("Fechar");
        mniFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniFecharActionPerformed(evt);
            }
        });
        mnSair.add(mniFechar);

        menuPrincipal.add(mnSair);

        setJMenuBar(menuPrincipal);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Início métodos de conversão de moedas
    private double realParaDolar(double vlrReal) {
        //conversão de real para dolar
        double cambioTaxa = 4.87;
        double vlrDolar = vlrReal / cambioTaxa;
        return vlrDolar;
    }
    
    private double dolarParaReal(double vlrDolar) {
        //converte dolar para real
        double cambioTaxa = 4.87;
        double vlrReal = vlrDolar * cambioTaxa;
        return vlrReal;
    }
    
    private double realParaEuro(double vlrReal) {
        //converte real para euro
        double cambioTaxa = 5.58;
        double vlrEuro = vlrReal / cambioTaxa;
        return vlrEuro;
    }
    
    private double euroParaReal(double vlrEuro) {
        //converte euro em reais
        double cambioTaxa = 5.58;
        double vlrReal = vlrEuro * cambioTaxa;
        return vlrReal;
    }
    
    private double realParaLibra(double vlrReal) {
        //converte reais em libras esterlinas
        double cambioTaxa = 6.62;
        double vlrLibra = vlrReal / cambioTaxa;
        return vlrLibra;
    }
    
    private double libraParaReal(double vlrLibra) {
        //converte libras esterlinas em reais
        double cambioTaxa = 6.62;
        double vlrReal = vlrLibra * cambioTaxa;
        return vlrReal;
    }
    
    private double realParaPesoA(double vlrReal) {
        //converte reais em pesos argentinos
        double cambioTaxa = 0.0174;
        double vlrPeso = vlrReal / cambioTaxa;
        return vlrPeso;
    }
    
    private double pesoAParaReal(double vlrPeso) {
        //converter pesos argentinos em reais
        double cambioTaxa = 0.0174;
        double vlrReal = vlrPeso * cambioTaxa;
        return vlrReal;
    }
    
    private double realParaPesoC(double vlrReal) {
        //converte real para peso chileno
        double cambioTaxa = 0.00659;
        double vlrPeso = vlrReal / cambioTaxa;
        return vlrPeso;
    }
    
    private double pesoCParaReal(double vlrPeso) {
        //converte pesos chilenos em reais
        double cambioTaxa = 0.00659;
        double vlrReal = vlrPeso * cambioTaxa;
        return vlrReal;
    }
    //Fim métodos de conversão de moedas
    
    //Métodos para conversão de temperaturas início
    
    private double celsiusParaFahrenheit(double vlrCelsius) {
        //converte celsius para fahrenheit
        double tempFahrenheit = (vlrCelsius * 1.8) + 32;
        return tempFahrenheit;
    }
    
    private double fahrenheitParaCelsius(double vlrFahrenheit) {
        //converte fahrenheit para celcius
        double tempCelcius = (vlrFahrenheit - 32) * 5/9;
        return tempCelcius;
    }
    
    private double celsiusParaKelvin(double vlrCelsius) {
        //converte celsius para kelvin
        double tempKelvin = vlrCelsius + 273.15;
        return tempKelvin;
    }
    
    private double kelvinParaCelsius(double vlrKelvin) {
        //converte kelvin para celsius
        double tempCelsius = vlrKelvin - 273.15;
        return tempCelsius;
    }
    //Fim dos métodos de conversão de temperatura
    
    
    private void btnConverterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConverterActionPerformed
        // ao clicar no botão converter o sistema identifica a seleção de moedas e realiza o cálculo
        try {
            double valor = Double.parseDouble(txtMoeda1.getText());
            //seleciona moeda de origem
            String moedaOrigem = (String) cbMoeda1.getSelectedItem();
            //seleciona moeda de destino
            String moedaDestino = (String) cbMoeda2.getSelectedItem();
            
            double resultado;
            
            //conversão com os métodos da classe ConversorDeMoedas
            if (moedaOrigem.equals("Real") && moedaDestino.equals("Real")) {
                resultado = valor;
            } else if (moedaOrigem.equals("Real") && moedaDestino.equals("Dolar")) {
                resultado = realParaDolar(valor);
            } else if (moedaOrigem.equals("Real") && moedaDestino.equals("Euro")) {
                resultado = realParaEuro(valor);
            } else if (moedaOrigem.equals("Real") && moedaDestino.equals("Libra Esterlina")) {
                resultado = realParaLibra(valor);
            } else if (moedaOrigem.equals("Real") && moedaDestino.equals("Peso Argentino")) {
                resultado = realParaPesoA(valor);
            } else if (moedaOrigem.equals("Real") && moedaDestino.equals("Peso Chileno")) {
                resultado = realParaPesoC(valor);
            }else if (moedaOrigem.equals("Dolar") && moedaDestino.equals("Real")) {
                resultado = dolarParaReal(valor);
            } else if (moedaOrigem.equals("Dolar") && moedaDestino.equals("Dolar")) {
                resultado = valor;
            } else if (moedaOrigem.equals("Dolar") && moedaDestino.equals("Euro")) {
                double conv = dolarParaReal(valor);
                resultado = realParaEuro(conv);
            } else if (moedaOrigem.equals("Dolar") && moedaDestino.equals("Libra Esterlina")) {
                double conv = dolarParaReal(valor);
                resultado = realParaLibra(conv);
            } else if (moedaOrigem.equals("Dolar") && moedaDestino.equals("Peso Argentino")) {
                double conv = dolarParaReal(valor);
                resultado = realParaPesoA(conv);
            } else if (moedaOrigem.equals("Dolar") && moedaDestino.equals("Peso Chileno")) {
                double conv = dolarParaReal(valor);
                resultado = realParaPesoC(conv);
            } else if (moedaOrigem.equals("Euro") && moedaDestino.equals("Real")) {
                resultado = euroParaReal(valor);
            } else if (moedaOrigem.equals("Euro") && moedaDestino.equals("Dolar")) {
                double conv = euroParaReal(valor);
                resultado = realParaDolar(conv);
            } else if (moedaOrigem.equals("Euro") && moedaDestino.equals("Euro")) {
                resultado = valor;
            } else if (moedaOrigem.equals("Euro") && moedaDestino.equals("Libra Esterlina")) {
                double conv = euroParaReal(valor);
                resultado = realParaLibra(conv);
            } else if (moedaOrigem.equals("Euro") && moedaDestino.equals("Peso Argentino")) {
                double conv = euroParaReal(valor);
                resultado = realParaPesoA(conv);
            } else if (moedaOrigem.equals("Euro") && moedaDestino.equals("Peso Chileno")) {
                double conv = euroParaReal(valor);
                resultado = realParaPesoC(conv);
            } else if (moedaOrigem.equals("Libra Esterlina") && moedaDestino.equals("Real")) {
                resultado = libraParaReal(valor);
            } else if (moedaOrigem.equals("Libra Esterlina") && moedaDestino.equals("Dolar")) {
                double conv = libraParaReal(valor);
                resultado = realParaDolar(conv);
            } else if (moedaOrigem.equals("Libra Esterlina") && moedaDestino.equals("Euro")) {
                double conv = libraParaReal(valor);
                resultado = realParaEuro(conv);
            } else if (moedaOrigem.equals("Libra Esterlina") && moedaDestino.equals("Libra Esterlina")) {
                resultado = valor;
            } else if (moedaOrigem.equals("Libra Esterlina") && moedaDestino.equals("Peso Argentino")) {
                double conv = libraParaReal(valor);
                resultado = realParaPesoA(conv);
            } else if (moedaOrigem.equals("Libra Esterlina") && moedaDestino.equals("Peso Chileno")) {
                double conv = libraParaReal(valor);
                resultado = realParaPesoC(conv);
            } else if (moedaOrigem.equals("Peso Argentino") && moedaDestino.equals("Real")) {
                resultado = pesoAParaReal(valor);
            } else if (moedaOrigem.equals("Peso Argentino") && moedaDestino.equals("Dolar")) {
                double conv = pesoAParaReal(valor);
                resultado = realParaDolar(conv);
            } else if (moedaOrigem.equals("Peso Argentino") && moedaDestino.equals("Euro")) {
                double conv = pesoAParaReal(valor);
                resultado = realParaEuro(conv);
            } else if (moedaOrigem.equals("Peso Argentino") && moedaDestino.equals("Libra Esterlina")) {
                double conv = pesoAParaReal(valor);
                resultado = realParaLibra(conv);
            } else if (moedaOrigem.equals("Peso Argentino") && moedaDestino.equals("Peso Argentino")) {
                resultado = valor;
            } else if (moedaOrigem.equals("Peso Argentino") && moedaDestino.equals("Peso Chileno")) {
                double conv = pesoAParaReal(valor);
                resultado = realParaPesoC(conv);
            } else if (moedaOrigem.equals("Peso Chileno") && moedaDestino.equals("Real")) {
                resultado = pesoCParaReal(valor);
            } else if (moedaOrigem.equals("Peso Chileno") && moedaDestino.equals("Dolar")) {
                double conv = pesoCParaReal(valor);
                resultado = realParaDolar(conv);
            } else if (moedaOrigem.equals("Peso Chileno") && moedaDestino.equals("Euro")) {
                double conv = pesoCParaReal(valor);
                resultado = realParaEuro(conv);
            } else if (moedaOrigem.equals("Peso Chileno") && moedaDestino.equals("Libra Esterlina")) {
                double conv = pesoCParaReal(valor);
                resultado = realParaLibra(conv);
            } else if (moedaOrigem.equals("Peso Chileno") && moedaDestino.equals("Peso Argentino")) {
                double conv = pesoCParaReal(valor);
                resultado = realParaPesoA(conv);
            } else if (moedaOrigem.equals("Peso Chileno") && moedaDestino.equals("Peso Chileno")) {
                resultado = valor;
            } else {
                resultado = 0d;
            }  
                            
            
            // Formatar o valor como dinheiro com duas casas decimais
            DecimalFormat decimalFormat = new DecimalFormat("#,##0.00");
            String valorMoeda2Formatado = decimalFormat.format(resultado);

            // Exibir o valor formatado no campo txtMoeda2
            txtMoeda2.setText(valorMoeda2Formatado);
        
        } catch (NumberFormatException ex) {
            //tratamento caso digite valor inválido
            ex.printStackTrace();
        }           
                       
    }//GEN-LAST:event_btnConverterActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        // limpa os campos para nova conversão
        txtMoeda1.setText("");
        txtMoeda2.setText("");
        cbMoeda1.getModel().setSelectedItem("Real");
        cbMoeda2.getModel().setSelectedItem("Real");
    }//GEN-LAST:event_btnLimparActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // chama tela de conversor de moedas
        jDesktopPane1.setVisible(true);
        jnConversorMoeda.setVisible(true);
        jnConversorTemp.setVisible(false);
        jnInfo.setVisible(false);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        // sair do conversor de moedas e voltar foco para janela principal
        txtMoeda1.setText("");
        txtMoeda2.setText("");
        cbMoeda1.getModel().setSelectedItem("Real");
        cbMoeda2.getModel().setSelectedItem("Real");
        jDesktopPane1.setVisible(false);
        jnConversorMoeda.setVisible(false);
        jnConversorTemp.setVisible(false);
        jnInfo.setVisible(false);
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void mniTemperaturasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniTemperaturasActionPerformed
        // chama conversor de temperaturas
        jDesktopPane1.setVisible(true);
        jnConversorMoeda.setVisible(false);
        jnConversorTemp.setVisible(true);
        jnInfo.setVisible(false);
    }//GEN-LAST:event_mniTemperaturasActionPerformed

    private void btnConverterTempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConverterTempActionPerformed
        // ao clicar no botao converter o sistema identifica as temperaturas e realiza o cálculo
        try {
            double valor = Double.parseDouble(txtTemp1.getText());
            //temperatura 1 selecionada
            String temp1 = (String) cbTemp1.getSelectedItem();
            //temperatura 2 selecionada
            String temp2 = (String) cbTemp2.getSelectedItem();
            
            double resultado;
            
            //realiza a conversão
            if (temp1.equals("Celsius") && temp2.equals("Fahrenheit")) {
                resultado = celsiusParaFahrenheit(valor);
            } else if (temp1.equals("Fahrenheit") && temp2.equals("Celsius")) {
                resultado = fahrenheitParaCelsius(valor);
            } else if (temp1.equals("Celsius") && temp2.equals("Kelvin")) {
                resultado = celsiusParaKelvin(valor);
            } else if (temp1.equals("Kelvin") && temp2.equals("Celsius")) {
                resultado = kelvinParaCelsius(valor);
            } else if (temp1.equals("Fahrenheit") && temp2.equals("Kelvin")) {
                double conv = fahrenheitParaCelsius(valor);
                resultado = celsiusParaKelvin(conv);
            } else if (temp1.equals("Kelvin") && temp2.equals("Fahrenheit")) {
                double conv = kelvinParaCelsius(valor);
                resultado = celsiusParaFahrenheit(conv);
            } else if (temp1.equals("Celsius") && temp2.equals("Celsius")) {
                resultado = valor;
            }  else if (temp1.equals("Fahrenheit") && temp2.equals("Fahrenheit")) {
                resultado = valor;
            } else if (temp1.equals("Kelvin") && temp2.equals("Kelvin")) {
                resultado = valor;
            } else {
                resultado = 0d;
            }
            

            // Exibir o valor formatado no campo txtTemp2
            txtTemp2.setText(Double.toString(resultado));
            
        } catch (NumberFormatException ex) {
            //tratamento da exceção
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnConverterTempActionPerformed

    private void btnLimparTempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparTempActionPerformed
        // botao limpar
        txtTemp1.setText("");
        txtTemp2.setText("");
        cbTemp1.getModel().setSelectedItem("Celsius");
        cbTemp2.getModel().setSelectedItem("Celsius");
    }//GEN-LAST:event_btnLimparTempActionPerformed

    private void btnVoltarTempActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarTempActionPerformed
        // fechar o conversor de temperaturas e voltar para a tela principal
        txtTemp1.setText("");
        txtTemp2.setText("");
        cbTemp1.getModel().setSelectedItem("Celsius");
        cbTemp2.getModel().setSelectedItem("Celsius");
        jDesktopPane1.setVisible(false);
        jnConversorMoeda.setVisible(false);
        jnConversorTemp.setVisible(false);
        jnInfo.setVisible(false);
    }//GEN-LAST:event_btnVoltarTempActionPerformed

    private void mniInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniInfoActionPerformed
        // chama tela de informações
        jDesktopPane1.setVisible(true);
        jnConversorMoeda.setVisible(false);
        jnConversorTemp.setVisible(false);
        jnInfo.setVisible(true);
    }//GEN-LAST:event_mniInfoActionPerformed

    private void btnVoltarInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarInfoActionPerformed
        jDesktopPane1.setVisible(false);
        jnConversorMoeda.setVisible(false);
        jnConversorTemp.setVisible(false);
        jnInfo.setVisible(false);
    }//GEN-LAST:event_btnVoltarInfoActionPerformed

    private void txtMoeda2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMoeda2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMoeda2ActionPerformed

    private void mniFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniFecharActionPerformed
        // encerra toda a aplicação
        System.exit(0);
    }//GEN-LAST:event_mniFecharActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaConversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaConversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaConversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaConversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaConversor().setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConverter;
    private javax.swing.JButton btnConverterTemp;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnLimparTemp;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JButton btnVoltarInfo;
    private javax.swing.JButton btnVoltarTemp;
    private javax.swing.JComboBox<String> cbMoeda1;
    private javax.swing.JComboBox<String> cbMoeda2;
    private javax.swing.JComboBox<String> cbTemp1;
    private javax.swing.JComboBox<String> cbTemp2;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JInternalFrame jnConversorMoeda;
    private javax.swing.JInternalFrame jnConversorTemp;
    private javax.swing.JInternalFrame jnInfo;
    private javax.swing.JLabel lbMoeda1;
    private javax.swing.JLabel lbMoeda2;
    private javax.swing.JLabel lbTemp1;
    private javax.swing.JLabel lbTemp2;
    private javax.swing.JMenuBar menuPrincipal;
    private javax.swing.JMenu mnSair;
    private javax.swing.JMenu mnSobre;
    private javax.swing.JMenuItem mniFechar;
    private javax.swing.JMenuItem mniInfo;
    private javax.swing.JMenu mniMoedas;
    private javax.swing.JMenuItem mniTemperaturas;
    private javax.swing.JTextField txtMoeda1;
    private javax.swing.JTextField txtMoeda2;
    private javax.swing.JTextField txtTemp1;
    private javax.swing.JTextField txtTemp2;
    // End of variables declaration//GEN-END:variables
}
